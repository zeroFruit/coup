html
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible" content="IE=edge")
    meta(name="viewport" content="width=device-width initial-scale=1")
    //- BOOTSTRAP STYLES
    link(href='public/stylesheets/temp/bootstrap.css',      rel='stylesheet')
    //- FONTAWESOME STYLES
    link(href='public/stylesheets/temp/font-awesome.css',   rel='stylesheet')
    //- TEMPLATE BASIC STYLES
    link(href='public/stylesheets/temp/basic.css',          rel='stylesheet')
    //- TEMPLATE MAIN STYLES
    link(href='public/stylesheets/temp/custom.css',         rel='stylesheet')
    //- TEMPLATE FORM SCRIPTS
    script(src='public/javascripts/temp/switchery.min.js')
    //- TEMPLATE FORM STYLEs
    //- link(href='public/stylesheets/temp/form-style.css',     rel='stylesheet')
    //- link(href='public/stylesheets/temp/switchery.min.css',  rel='stylesheet')
    link(href='public/stylesheets/temp/modal-form.css',     rel='stylesheet')
    //- GOOGLE FONTS
    link(href='http://fonts.googleapis.com/css?family=Open+Sans', rel='stylesheet', type='text/css')
    link(href='http://fonts.googleapis.com/earlyaccess/jejugothic.css', rel='stylesheet', type='text/css')
    //- TEMPLATE CLIENT-PAGE-STYLE
    link(href='public/stylesheets/temp/client-page-style.css',     rel='stylesheet')
    //-link(href='public/stylesheets/temp/seats-style-test.css' rel='stylesheet')
    link(href='public/stylesheets/temp/jquery.seat-charts.css' rel='stylesheet')
    //- SEAT CHART CUSTOM STYLE
    link(href='public/stylesheets/temp/seat-chart-custom.css' rel='stylesheet')
  body
    #wrapper
      #page-wrapper
        .row
          .col-md-12
            h1.page-head-line 4층 입니다.
            h1.page-subhead-line 좌석을 선택하고 좌석선택 버튼을 눌러주세요.
        .row
          .col-md-3.col-md-offset-3
            .booking-details
              h2 좌석
              hr
              #seat-map
          .col-md-2
            .booking-details
              h2 좌석 정보
              h3
                | 선택한 자리 (
                span#counter -
                | ):
              ul#selected-seats
              button.checkout-button#checkout 좌석선택 »
              #legend
          .col-md-4
            .booking-details
              h2 다른 층 좌석 보기
              button.checkout-button#3f 3F - 열람실
              button.checkout-button#4f 4F - 열람실
    form#seat-submit(action='/clients/seat' method='post')
      input(type='hidden' name='seatid')
      input(type='hidden' name='seatnum')
      input(type='hidden' name='alias')
      input(type='hidden' name='paymentid')
      input(type='hidden' name='leftTime')
      input(type='hidden' name='floorid') 
    form#floor-change(action='/clients/floor' method='post')
      input(type='hidden' name='alias')
      input(type='hidden' name='floornum')
      input(type='hidden' name='pid')
      input(type='hidden' name='lt')
      
    //- JQUERY SCRIPTS
    script(src='public/javascripts/temp/jquery-1.10.2.js')
    //- BOOTSTRAP SCRIPTS
    script(src='public/javascripts/temp/bootstrap.js')
    //- METISMENU SCRIPTS
    script(src='public/javascripts/temp/jquery.metisMenu.js')
    //- TEMPLATE LAYOUT SCRIPTS
    script(src='public/javascripts/temp/custom.js')
    script(src='public/javascripts/temp/jquery.seat-charts.min.js')
    script.
      var floorid         = "4";
      var firstSeatLabel  = 39;
      var accessMember    = '!{alias}';
      var seatinfo        = '!{seatinfo}';  /* this is seat info which contains seatid, payment, memo */
      var paymentid       = '!{paymentid}'; 
      var leftTime        = '!{leftTime}';
      
      var jsonSeatInfo  = JSON.parse(seatinfo);
      //alert(seatinfo);
      console.log(seatinfo);
      console.log(jsonSeatInfo);
      $(document).ready(function() {
        var $cart = $('#selected-seats'),
          $counter = $('#counter'),
          sc = $('#seat-map').seatCharts({
          map: [
            '_nn_nn____',
            '_nn_nn____',
            '________nn',
            '________nn',
            '__________',
            '________nn',
            '_nn__nn_nn',
            '_nn__nnWWW',
            'PPPP___W__',
            '_______W__',
            'P_PP__PW__',
            'P_PP__PW__',
            'P_PP__PW__',
            'P_PP__PW__',
            '_______E__',
            '_______E__'
          ],
          seats: {
            n: {
              price   : 100,
              classes : 'normal-seats', //your custom CSS class
              category: '좌석'
            },
            P: {
              classes: 'premium',
              category: '관리형반'
            },
            E: {
              classes: 'enterance'
            },
            W: {
              classes: 'wall'
            }
          },
          naming : {
            top : false,
            left: false,
            getLabel : function (character, row, column) {
              if ((row == 15 && column == 8) || (row == 16 && column == 8)) {
                return 'E';
              }
              if ((row==14&&column==8)||(row==13&&column==8)||(row==12&&column==8)||(row==11&&column==8)||(row==10&&column==8)||(row==9&&column==8)||(row==8&&column==10)||(row==8&&column==9)||(row==8&&column==8)) {
                return '';
              }
              return firstSeatLabel++;
            },
          },
          legend : {
            node : $('#legend'),
              items : [
              [ 'n', 'available',   '남아있는 자리' ],
              [ 'P', 'available',   '관리형반 자리' ],
              [ 'E', 'unavailable', '입구']
              ]					
          },
          click: function () {
            if (this.status() == 'available') {
              /*
                script about two seats simultanously  can not be reserved
              */
              $counter.text(this.data().category+": "+this.settings.label);
              sc.find('n.selected').status('available');
              sc.find('P.selected').status('available');
              return 'selected';
            } else if (this.status() == 'selected') {
        
              $counter.text("-");
              //remove the item from our cart
              $('#cart-item-'+this.settings.id).remove();
            
              //seat has been vacated
              return 'available';
            } else if (this.status() == 'unavailable') {
              //seat has been already booked
              return 'unavailable';
            } else {
              return this.style();
            }
          }
        });
        
        /*
          Enterance
        */
        sc.get(['15_8', '16_8', '14_8', '13_8', '12_8','11_8','10_8','9_8','8_8','8_9','8_10']).status('unavailable');
        /* 
          after creating sc object, fetch unavailable seat with seatinfo object 
        */
        var unavail_seats = [];
        for (var i = 0; i < jsonSeatInfo.length; i++) {
          var seatobj = jsonSeatInfo[i];
          /*
            We have to check whether seatobj element seat floor is same with current page floorid:4
          */
          if (seatobj.seat_floor === floorid /* "4" */) {
            unavail_seats.push(seatobj.seat); 
          }
        }
        
        console.log(unavail_seats);
        sc.status(unavail_seats, 'unavailable');
        
        
        //let's pretend some seats have already been booked
        //sc.get(['1_2', '4_1', '7_1', '7_2']).status('unavailable');
        $('#checkout').on('click', function() {
          var seatid, seatnum;
          if (sc.find('n.selected').length == 0) {
            sc.find('P.selected').each(function(seatId) {
              /* there should be only one element */
              console.log(this.settings.id);
              seatid = this.settings.id;
              seatnum = this.settings.label;
            });
            if (sc.find('n.selected').length == 0 || sc.find('P.selected').length == 0) {
              alert('좌석을 선택해주세요');
              return false;
            }
            /*
              if user other than management type select this seats alert and abort
            */
            if (paymentid !== '13') {
              alert('관리형반 자리입니다.');
              return false;
            }
          }
          else {
            sc.find('n.selected').each(function(seatId) {
              /* there should be only one element */
              console.log(this.settings.id);
              seatid = this.settings.id;
              seatnum = this.settings.label;
            });
          }
          
          
          $('input[name="seatid"]').val(seatid);
          $('input[name="alias"]').val(accessMember);
          $('input[name="seatnum"]').val(seatnum);
          $('input[name="paymentid"]').val(paymentid);
          $('input[name="leftTime"]').val(leftTime);
          $('input[name="floorid"]').val(floorid); /* this indicate which floor are you going to book */
          $('#seat-submit').submit();
        });
        
        /* change floor button clicked */
        $('#3f').click(function() {
          $('input[name="floornum"]').val("3");
          $('input[name="pid"]').val(paymentid);
          $('input[name="lt"]').val(leftTime);
          $('input[name="alias"]').val(accessMember);
          
          $('#floor-change').submit();                   
        });
        $('#4f').click(function() {
          $('input[name="floornum"]').val("4");
          $('input[name="pid"]').val(paymentid);
          $('input[name="lt"]').val(leftTime);
          $('input[name="alias"]').val(accessMember);
          
          $('#floor-change').submit();                   
        });
        $('#b1').click(function() {
          $('input[name="floornum"]').val("-1");
          $('input[name="pid"]').val(paymentid);
          $('input[name="lt"]').val(leftTime);
          $('input[name="alias"]').val(accessMember);
          
          $('#floor-change').submit();                    
        }); 
        
        
      });
      /* block go back ward */
      history.pushState(null, document.title, location.href);
      window.addEventListener('popstate', function (event)
      {
        history.pushState(null, document.title, location.href);
      });      


      

    
