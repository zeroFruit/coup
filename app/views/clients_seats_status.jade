html
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible" content="IE=edge")
    meta(name="viewport" content="width=device-width initial-scale=1")
    //- BOOTSTRAP STYLES
    link(href='public/stylesheets/temp/bootstrap.css',      rel='stylesheet')
    //- FONTAWESOME STYLES
    link(href='public/stylesheets/temp/font-awesome.css',   rel='stylesheet')
    //- TEMPLATE BASIC STYLES
    link(href='public/stylesheets/temp/basic.css',          rel='stylesheet')
    //- TEMPLATE MAIN STYLES
    link(href='public/stylesheets/temp/custom.css',         rel='stylesheet')
    //- TEMPLATE FORM SCRIPTS
    script(src='public/javascripts/temp/switchery.min.js')
    //- TEMPLATE FORM STYLEs
    //- link(href='public/stylesheets/temp/form-style.css',     rel='stylesheet')
    //- link(href='public/stylesheets/temp/switchery.min.css',  rel='stylesheet')
    link(href='public/stylesheets/temp/modal-form.css',     rel='stylesheet')
    //- GOOGLE FONTS
    link(href='http://fonts.googleapis.com/css?family=Open+Sans', rel='stylesheet', type='text/css')
    //- TEMPLATE CLIENT-PAGE-STYLE
    link(href='public/stylesheets/temp/client-page-style.css',     rel='stylesheet')
    //-link(href='public/stylesheets/temp/seats-style-test.css' rel='stylesheet')
    link(href='public/stylesheets/temp/jquery.seat-charts.css' rel='stylesheet')
    //- SEAT CHART CUSTOM STYLE
    link(href='public/stylesheets/temp/seat-chart-custom.css' rel='stylesheet')
  body
    #wrapper
      #page-wrapper
        .row
          .col-md-12
            h1.page-head-line 좌석 현황입니다.
        .row
          .col-md-4.col-md-offset-4
            .main-box.mb-dull
              a#client-return.a-cursor-pointer
                h5 돌아가기
        .row
          .col-md-3.col-md-offset-3
            .booking-details
              h2 3층 좌석
              hr
              #seat-map-3f
          .col-md-3.col-md-offset-1
            .booking-details
              h2 4층 좌석
              hr
              #seat-map-4f

    form#client-return-submit(action='/clients/return' method='post')
      input(type='hidden' name='return')
      
    //- JQUERY SCRIPTS
    script(src='public/javascripts/temp/jquery-1.10.2.js')
    //- BOOTSTRAP SCRIPTS
    script(src='public/javascripts/temp/bootstrap.js')
    //- METISMENU SCRIPTS
    script(src='public/javascripts/temp/jquery.metisMenu.js')
    //- TEMPLATE LAYOUT SCRIPTS
    script(src='public/javascripts/temp/custom.js')
    script(src='public/javascripts/temp/jquery.seat-charts.min.js')
    script.
      var firstSeatLabel_3f   = 1;
      var firstSeatLabel_4f   = 39;
      var seatinfo            = '!{seatinfo}';  /* this is seat info which contains seatid, payment, memo */
      
      var jsonSeatInfo  = JSON.parse(seatinfo);
      //alert(seatinfo);
      //console.log(seatinfo);
      //console.log(jsonSeatInfo);
      $(document).ready(function() {
          var sc3f = $('#seat-map-3f').seatCharts({
          map: [
            'nnnnnn__n',
            'nnnnnn__n',
            '________n',
            'nnnnnn__n',
            'nnnnnn__n',
            '________n',
            'nnnn_____',
            'nnnn_____'
          ],
          seats: {
            n: {
              price   : 100,
              classes : 'normal-seats', //your custom CSS class
              category: '좌석'
            },
          },
          naming : {
            top : false,
            left: false,
            getLabel : function (character, row, column) {
              return firstSeatLabel_3f++;
            },
          },
          legend : {
            node : $('#legend'),
              items : [
              [ 'n', 'available',   '남아있는 자리' ],
              ]					
          },
          
          click: function () {
            if (this.status() == 'available') {
              /*
                script about two seats simultanously  can not be reserved
              */
              sc3f.find('n.selected').status('available');
          
              return 'selected';
            } else if (this.status() == 'selected') {
              //seat has been vacated
              return 'available';
            } else if (this.status() == 'unavailable') {
              //seat has been already booked
              return 'unavailable';
            } else {
              return this.style();
            }
          }
        });
        
        var sc4f = $('#seat-map-4f').seatCharts({
        map: [
          'nnnn___',
          '_______',
          'n_nn__n',
          'n_nn__n',
          'n_nn__n',
          'n_nn__n'
        ],
        seats: {
          n: {
            price   : 100,
            classes : 'normal-seats', //your custom CSS class
            category: '좌석'
          },
        },
        naming : {
          top : false,
          left: false,
          getLabel : function (character, row, column) {
            return firstSeatLabel_4f++;
          },
        },
        legend : {
          node : $('#legend'),
            items : [
            [ 'n', 'available',   '남아있는 자리' ],
            ]					
        },
        
        click: function () {
          if (this.status() == 'available') {
            /*
              script about two seats simultanously  can not be reserved
            */
            sc4f.find('n.selected').status('available');
        
            return 'selected';
          } else if (this.status() == 'selected') {
            //seat has been vacated
            return 'available';
          } else if (this.status() == 'unavailable') {
            //seat has been already booked
            return 'unavailable';
          } else {
            return this.style();
          }
        }
      });
        /* 
          after creating sc object, fetch unavailable seat with seatinfo object 
        */
        var unavail_seats_3f = [];
        var unavail_seats_4f = [];
        for (var i = 0; i < jsonSeatInfo.length; i++) {
          var seatobj = jsonSeatInfo[i];
          /*
            We have to check whether seatobj element seat floor is same with current page floorid:3
          */
          if (seatobj.seat_floor === "3" /* "3" */) {
            unavail_seats_3f.push(seatobj.seat);            
          }
          
          else if (seatobj.seat_floor === "4" /* "3" */) {
            unavail_seats_4f.push(seatobj.seat);            
          }
        }
        //- //console.log('this is unavail_seat');
        //- //alert(unavail_seats[0]);
        sc3f.status(unavail_seats_3f, 'unavailable');
        sc4f.status(unavail_seats_4f, 'unavailable');
        
        /*
          client want to return to index
        */
        $('#client-return').click(function() {
          $('input[name="return"]').val('1');
          $('#client-return-submit').submit();
        });
        
      });
      /* block go back ward */
      history.pushState(null, document.title, location.href);
      window.addEventListener('popstate', function (event)
      {
        history.pushState(null, document.title, location.href);
      });
      
      
      

    

      

    
